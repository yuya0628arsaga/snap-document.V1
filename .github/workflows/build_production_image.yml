name: Deploy work flow for Amazon ECS

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER_NAME: snap-prod-cluster
  ECS_WEBAPP_SERVICE: snap-prod-app-and-nginx-service
  ECS_GPT_ENGINE_SERVICE: snap-prod-gpt-engine-service
  NGINX_CONTAINER_NAME: nginx
  APP_CONTAINER_NAME: app
  NGINX_TAG: 1.0.0
  APP_TAG: 1.0.0
  GPT_ENGINE_TAG: 1.0.0

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "18"

    - name: setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: "8.2"

    - name: Git clone the repository
      uses: actions/checkout@v2

    - name: composer install
      uses: "ramsey/composer-install@v2"
      with:
        working-directory: "."
        composer-options: "--optimize-autoloader"

    - name: yarn
      run: yarn
      working-directory: "."

    - name: run vite
      run: yarn build
      working-directory: "."

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push nginx image
      uses: docker/build-push-action@v4
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        push: true
        file: .docker/production/nginx/Dockerfile
        # target: ${{ env.ECR_REGISTRY }}
        tags: 531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-nginx:${{ env.NGINX_TAG }},531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-nginx:latest
        context: .

    - name: Build and push app image
      uses: docker/build-push-action@v4
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        push: true
        file: .docker/production/app/Dockerfile
        # target: ${{ env.ECR_REGISTRY }}
        tags: 531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-app:${{ env.APP_TAG }},531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-app:latest
        context: .

    # gpt_engine のイメージ作成と ECRへのpush
    - name: Build and push gpt_engine image
      uses: docker/build-push-action@v4
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        push: true
        file: .docker/production/gpt_engine/Dockerfile
        # target: ${{ env.ECR_REGISTRY }}
        tags: 531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-gpt-engine:${{ env.APP_TAG }},531087524630.dkr.ecr.ap-northeast-1.amazonaws.com/snap-prod-gpt-engine:latest
        context: ./.docker/local/python

    - name: Deploy to ECS
      run: |
        aws ecs update-service --service $ECS_WEBAPP_SERVICE --cluster $ECS_CLUSTER_NAME --force-new-deployment
        aws ecs update-service --service $ECS_GPT_ENGINE_SERVICE --cluster $ECS_CLUSTER_NAME --force-new-deployment